import org.jetbrains.compose.desktop.application.dsl.TargetFormat
import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    alias(libs.plugins.kotlin.multiplatform)
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.compose)
    alias(libs.plugins.compose.compiler)
    alias(libs.plugins.kotlin.serialization)
}

kotlin {
    androidTarget {
        compilerOptions {
            jvmTarget.set(JvmTarget.JVM_11)
        }
    }

    jvm("desktop")

    [iosX64(), iosArm64(), iosSimulatorArm64()].forEach { iosTarget ->
        iosTarget.binaries.framework {
            baseName = "ComposeApp"
            isStatic = true
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                // foundation
                implementation libs.kotlin.stdlib
                implementation libs.androidx.core.ktx
                implementation libs.kotlinx.coroutines.core
                implementation libs.napier
                // compose
                implementation compose.runtime
                implementation compose.foundation
                implementation compose.material3
                implementation compose.ui
                implementation compose.components.resources
                implementation compose.components.uiToolingPreview
                implementation compose.animation
                implementation compose.materialIconsExtended
                implementation libs.jetbrains.lifecycle.viewmodel
                implementation libs.jetbrains.lifecycle.runtime.compose
                implementation libs.jetbrains.navigation.compose
                // network
                implementation libs.ktor.client.core
                implementation libs.ktor.logging
                implementation libs.ktor.negotiation
                implementation libs.ktor.json
                implementation libs.ktor.encoding
                implementation libs.kotlinx.serialization.json
                implementation libs.coil
                implementation libs.coil.ktor
                implementation libs.coil.compose
            }
        }
        androidMain {
            dependencies {
                implementation compose.preview
                implementation libs.androidx.activity.compose
                implementation libs.kotlinx.coroutines.android
                // network
                implementation libs.ktor.client.okhttp
            }
        }
        iosMain {
            dependencies {
                // network
                implementation libs.ktor.client.darwin
            }
        }
        desktopMain {
            dependencies {
                implementation compose.desktop.currentOs
                implementation libs.kotlinx.coroutines.swing
                // network
                implementation libs.ktor.client.java
            }
        }
    }
}

android {
    namespace 'com.thoughtworks.boilerplate'
    compileSdk libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        applicationId "com.thoughtworks.boilerplate"
        minSdk libs.versions.minSdk.get().toInteger()
        targetSdk libs.versions.targetSdk.get().toInteger()
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    buildFeatures {
        compose true
    }
    packaging {
        resources {
            it.excludes += '/META-INF/{AL2.0,LGPL2.1}'
            it.merges += 'META-INF/LICENSE.md'
            it.merges += 'META-INF/LICENSE-notice.md'
        }
    }
    sourceSets {
        main {
            manifest.srcFile("src/androidMain/AndroidManifest.xml")
            res.srcDirs("src/androidMain/res")
            resources.srcDirs("src/commonMain/resources")
        }
    }

//    copy {
//        from '../githooks'
//        into '../.git/hooks'
//        fileMode 0755
//    }

    dependencies {
        debugImplementation compose.uiTooling
    }
}

compose.desktop {
    application {
        mainClass = "com.thoughtworks.boilerplate.MainKt"

        nativeDistributions {
            targetFormats = [TargetFormat.Dmg, TargetFormat.Msi, TargetFormat.Deb]
            packageName = "com.thoughtworks.boilerplate"
            packageVersion = "1.0.0"
        }
    }
}
